{% extends 'patient/baseRendezVous.html.twig' %}

{% block body %}
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-primary text-white text-center">
                    <h3 class="card-title mb-0">Prendre un rendez-vous</h3>
                </div>
                <div class="card-body p-4">
                    {% if form is not null %}
                        {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

                        {# Champ Service #}
                        <div class="mb-4">
                            {{ form_label(form.service, 'Service', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.service, {'attr': {'class': 'form-select select-service'}}) }}
                            {{ form_errors(form.service) }}
                        </div>

                        {# Champ Médecin #}
                        <div class="mb-4">
                            {{ form_label(form.medecin, 'Médecin', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.medecin, {'attr': {'class': 'form-select select-medecin'}}) }}
                            {{ form_errors(form.medecin) }}
                        </div>

                        {# Champ Date Disponible #}
                        <div class="mb-4">
                            {{ form_label(form.date, 'Date Disponible', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.date, {'attr': {'class': 'form-select select-date', 'readonly': 'readonly'}}) }}
                            {{ form_errors(form.date) }}
                        </div>

                        {# Bouton de soumission #}
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg">Next</button>
                        </div>

                        {{ form_end(form) }}
                    {% else %}
                        <p class="text-center text-danger">Aucun service disponible pour le moment.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const serviceSelect = document.querySelector('.select-service');
    const medecinSelect = document.querySelector('.select-medecin');
    const dateSelect = document.querySelector('.select-date');

    serviceSelect.addEventListener('change', function () {
        const serviceId = this.value;
        if (serviceId) {
            fetch(`/medecins/par-service/${serviceId}`)
                .then(response => response.json())
                .then(data => {
                    medecinSelect.innerHTML = '<option value="">Sélectionnez un médecin</option>';
                    data.forEach(medecin => {
                        const option = document.createElement('option');
                        option.value = medecin.id;
                        option.textContent = medecin.nom;
                        medecinSelect.appendChild(option);
                    });
                    medecinSelect.disabled = false;
                })
                .catch(error => console.error('Erreur lors du chargement des médecins:', error));
        } else {
            medecinSelect.innerHTML = '<option value="">Sélectionnez un service d\'abord</option>';
            medecinSelect.disabled = true;
            dateSelect.innerHTML = '<option value="">Sélectionnez un médecin d\'abord</option>';
            dateSelect.disabled = true;
        }
    });

    medecinSelect.addEventListener('change', function () {
        const medecinId = this.value;
        if (medecinId) {
            fetch(`/dates-disponibles/${medecinId}`)
                .then(response => response.json())
                .then(data => {
                    dateSelect.innerHTML = '<option value="">Sélectionnez une date disponible</option>';
                    data.forEach(date => {
                        const option = document.createElement('option');
                        option.value = date.date;
                        option.textContent = date.date;
                        dateSelect.appendChild(option);
                    });
                    dateSelect.disabled = false;
                })
                .catch(error => console.error('Erreur lors du chargement des dates:', error));
        } else {
            dateSelect.innerHTML = '<option value="">Sélectionnez un médecin d\'abord</option>';
            dateSelect.disabled = true;
        }
    });
});
</script>
{% endblock %}
