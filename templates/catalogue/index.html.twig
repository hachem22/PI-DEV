{% extends 'base.html.twig' %}

{% block title %}CareConnect - Catalogue des Produits{% endblock %}

{% block body %}
<!-- En-tête du catalogue -->
<div class="pharmacy-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1>Catalogue des Produits</h1>
                <p class="lead">Découvrez notre gamme de produits pharmaceutiques</p>
            </div>
        </div>
    </div>
</div>

<!-- Section catalogue -->
<section class="pharmacy-catalog">
    <div class="container">
        <!-- Filtres et recherche -->
        <div class="filters-section mb-4">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="search-box">
                        <input type="text" class="form-control" id="searchProduct" placeholder="Rechercher un produit...">
                        <i class="fa fa-search"></i>
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="typeFilter">
                        <option value="">Tous les types</option>
                        <option value="medicament">Médicaments</option>
                        <option value="paramedical">Paramédical</option>
                        <option value="complement">Compléments alimentaires</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="sortFilter">
                        <option value="nom">Trier par nom</option>
                        <option value="prix_asc">Prix croissant</option>
                        <option value="prix_desc">Prix décroissant</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Grille des produits -->
        <div class="row g-4">
            {% for produit in produits %}
                <div class="col-lg-4 col-md-6 product-card-wrapper">
                    <div class="product-card">
                        <div class="product-badge {{ produit.statu == 'En stock' ? 'badge-success' : (produit.statu == 'Stock faible' ? 'badge-warning' : 'badge-danger') }}">
                            {{ produit.statu }}
                        </div>
                        
                        <div class="product-image">
                            {% if produit.image %}
                                <img src="{{ asset('uploads/images/' ~ produit.image) }}" alt="{{ produit.nom }}">
                            {% else %}
                                <img src="{{ asset('img/default-medicine.png') }}" alt="Image par défaut">
                            {% endif %}
                        </div>

                        <div class="product-details">
                            <h3 class="product-title">{{ produit.nom }}</h3>
                            <div class="product-info">
                                <div class="info-row">
                                    <span class="label">Type:</span>
                                    <span class="value">
                                        <span class="badge bg-{{ 
                                            produit.type == 'Médicament' ? 'primary' : 
                                            produit.type == 'Paramédical' ? 'info' : 'success' 
                                        }}">
                                            {{ produit.type }}
                                        </span>
                                    </span>
                                </div>
                                <div class="info-row">
                                    <span class="label">Prix:</span>
                                    <span class="value">{{ produit.prix }}€</span>
                                </div>
                                <div class="info-row">
                                    <span class="label">Disponibilité:</span>
                                    <span class="value">{{ produit.statu }}</span>
                                </div>
                            </div>

                            <div class="product-description">
                                <p>{{ produit.description|slice(0, 100) }}...</p>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <!-- Message aucun résultat -->
        <div class="no-results" id="noResultsMessage" style="display: none;">
            <i class="fas fa-search fa-3x mb-3 text-muted"></i>
            <h4>Aucun produit trouvé</h4>
            <p class="text-muted">Essayez de modifier vos critères de recherche</p>
        </div>
    </div>
</section>

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Sélecteurs des éléments
    const searchInput = document.getElementById('searchProduct');
    const typeFilter = document.getElementById('typeFilter');
    const sortFilter = document.getElementById('sortFilter');
    const productsGrid = document.querySelector('.row.g-4');
    const productCards = document.querySelectorAll('.product-card-wrapper');
    const noResultsMessage = document.getElementById('noResultsMessage');

    function filterAndSortProducts() {
        const searchTerm = searchInput.value.toLowerCase();
        const typeValue = typeFilter.value.toLowerCase();
        const sortValue = sortFilter.value;
        let visibleProducts = 0;

        // Convertir NodeList en Array pour le tri
        const productsArray = Array.from(productCards);

        // Filtrage
        productsArray.forEach(card => {
            const title = card.querySelector('.product-title').textContent.toLowerCase();
            const description = card.querySelector('.product-info').textContent.toLowerCase();
            const type = card.querySelector('.info-row:first-child .badge').textContent.toLowerCase();
            
            const matchSearch = title.includes(searchTerm) || description.includes(searchTerm);
            const matchType = !typeValue || type.includes(typeValue);
            
            if (matchSearch && matchType) {
                card.style.display = '';
                visibleProducts++;
            } else {
                card.style.display = 'none';
            }
        });

        // Tri
        productsArray
            .filter(card => card.style.display !== 'none')
            .sort((a, b) => {
                const getPrice = (el) => parseFloat(el.querySelector('.info-row:nth-child(2) .value').textContent);
                const getName = (el) => el.querySelector('.product-title').textContent;

                switch(sortValue) {
                    case 'prix_asc':
                        return getPrice(a) - getPrice(b);
                    case 'prix_desc':
                        return getPrice(b) - getPrice(a);
                    default:
                        return getName(a).localeCompare(getName(b));
                }
            })
            .forEach((card, index) => {
                card.style.order = index;
            });

        // Afficher/masquer le message "aucun résultat"
        noResultsMessage.style.display = visibleProducts === 0 ? 'block' : 'none';
    }

    // Écouteurs d'événements
    searchInput.addEventListener('input', filterAndSortProducts);
    typeFilter.addEventListener('change', filterAndSortProducts);
    sortFilter.addEventListener('change', filterAndSortProducts);
});
</script>
{% endblock %}

<style>
.product-card {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background: white;
    height: 100%;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.product-image {
    height: 200px;
    overflow: hidden;
    position: relative;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
    z-index: 1;
}

.badge-success { background-color: #28a745; color: white; }
.badge-warning { background-color: #ffc107; color: black; }
.badge-danger { background-color: #dc3545; color: white; }

.product-details {
    padding: 1.5rem;
}

.product-title {
    font-size: 1.2rem;
    margin-bottom: 1rem;
    color: #333;
}

.info-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
}

.info-row .label {
    color: #666;
    font-weight: 500;
}

.product-description {
    margin-top: 1rem;
    font-size: 0.9rem;
    color: #666;
}

.filters-section {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    margin-bottom: 2rem;
}

.search-box {
    position: relative;
}

.search-box i {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
}

.no-results {
    text-align: center;
    padding: 3rem;
    background: #f8f9fa;
    border-radius: 8px;
    margin-top: 2rem;
}
</style>
{% endblock %} 